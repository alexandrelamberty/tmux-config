# Tmux configuration
# https://github.com/tmux/tmux/wiki

# Global options --------------------------------------------------------------

set -g default-terminal "screen-256color"
set-option -a terminal-overrides ",*256col*:RGB"
# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0
set -g status-interval 5
set -g base-index 1
set -gw pane-base-index 1
set -g renumber-windows on
set -s escape-time 10 # faster command sequences
set -sg repeat-time 600 # increase repeat timeout
set -s focus-events on
set -q -g status-utf8 on # expect UTF-8 (tmux < 2.2)
set -g history-limit 5000 # Increase scrollback buffer size
setw -q -g utf8 on
setw -g mode-keys vi
setw -g xterm-keys on
# For "grouped sessions" and multi-monitor setup (https://github.com/tmux-plugins/tmux-sensible)
setw -g aggressive-resize on

# Keybindings ------------------------------------------------------------------

set -g prefix C-Space
unbind-key C-b
bind-key C-Space send prefix

# Session navigation
bind Tab switch-client -l # move to last session

# Window navigation
# bind C-l next-window
# bind C-h previous-window
bind C-p previous-window
bind C-n next-window
bind Space last-window

# Pane splitting
bind H split-window -h
bind V split-window -v

# Pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane closing without warning
bind X kill-pane

# Reload configuration
bind R source-file ~/.tmux.conf \; display-message "  Configuration reloading..."

# Copy mode
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard && notify-send "Selection clipped"'

# Pop-ups ---------------------------------------------------------------------

# Search
bind C-f display-popup -E "find . | fzf --reverse | xargs -r tmux split-window -d 'nvim'"

# Execute NPM scripts
# FIXME. Change to generic script for handling running NPM and Make.
bind C-x display-popup -E "npm-execute-script | xargs -r tmux split-window -d 'NPM'"

# ------------------------------------------------------------------------------
# Visuals
# ------------------------------------------------------------------------------

# Panes
# set -g pane-border-status bottom
set -g pane-border-style fg="#090B10"
set -g pane-active-border-style "bg=default fg=magenta"

# Titles
set -g set-titles on
# window number,program name, active(or not)
set -g set-titles-string '#H  #S #W(#I.#P) #T' 

# Status bar
set -g status-position top # bottom | top
set -g status-justify left # left | centre | absolute-centre | right
set -g status-bg "#0F111A"
set -g status-fg white

# Current windows status
#  #I - window index
#  #W - window title
#  #F - window flag
setw -g window-status-current-format '#[fg=yellow]#W#[fg=blue](#I)#[fg=green]#F '

# Windows status w
setw -g window-status-format '#W#[fg=blue](#I)#[fg=green]#F '

# Bell status
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# Status left
set -g status-left-length 85
set -g status-left '#{?client_prefix,#[fg=green]█,#[fg=blue]█}'
set -ag status-left "#[fg=blue]   #[fg=green]#S "
set -ag status-left "#[fg=blue] "

# Status right
set -g status-right-length 120
set -g status-right ' #[fg=blue]#{pane_current_path} '
set -ag status-right '#[fg=green]  #{continuum_status} '
set -ag status-right ''


# ------------------------------------------------------------------------------
# Hooks
# ------------------------------------------------------------------------------

# TODO Check popup to change status bar like in full screen or not,
# Automate the change of status when switching to full screen
set-hook -g window-linked 'if -F "#{==:#{continuum_status},1}" "set -g status off" "set -g status on"'
set-hook -g window-unlinked 'if -F "#{==:#{continuum_status},1}" "set -g status off" "set -g status on"'

# ------------------------------------------------------------------------------
# Plugins
# ------------------------------------------------------------------------------

# Auto install TPM and install plugins
if "test ! -d ~/.tmux/plugins/tpm" \
	"run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Plugins list
set -g @plugin 'tmux-plugins/tpm'									 # Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tmux-resurrect'			 # Save and restore tmux sessions
set -g @plugin 'tmux-plugins/tmux-continuum'			 # Save and restore tmux sessions

# Resurrect options
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Continuum options
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-save-interval '10'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
